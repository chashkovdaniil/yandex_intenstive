import 'package:flutter/material.dart';
import 'package:syncfusion_flutter_maps/maps.dart';
import 'package:yandex_intensive/modules/map/presentation/widgets/rest_country_card.dart';
import 'package:yandex_intensive/modules/map/presentation/widgets/top_country_card.dart';

import '../modules/map/presentation/helpers/model.dart';
import 'colors.dart';

class S {
  static String get mapTitle => 'World Wide map';

  static String get mapAreas => 'COVID - 19 Affected Areas';

  static String get mapTop => 'Top Countries';

  static String get mapRest => 'Rest of the world';
}

class MockData {
  static List<Model> get mapData => const <Model>[
        Model('Afghanistan', 348),
        Model('Angola', 561),
        Model('Albania', 599),
        Model('United Arab Emirates', 225),
        Model('Argentina', 569),
        Model('Armenia', 31),
        Model('Australia', 5),
        Model('Austria', 232),
        Model('Azerbaijan', 238),
        Model('Burundi', 533),
        Model('Belgium', 374),
        Model('Benin', 298),
        Model('Burkina Faso', 67),
        Model('Bangladesh', 68),
        Model('Bulgaria', 170),
        Model('Bahamas', 54),
        Model('Bosnia and Herz.', 379),
        Model('Belarus', 34),
        Model('Belize', 280),
        Model('Bolivia', 385),
        Model('Brazil', 194),
        Model('Brunei', 289),
        Model('Bhutan', 335),
        Model('Botswana', 417),
        Model('Central African Rep.', 227),
        Model('Canada', 246),
        Model('Switzerland', 582),
        Model('Chile', 516),
        Model('China', 431),
        Model("CÃ´te d'Ivoire", 200),
        Model('Cameroon', 464),
        Model('Dem. Rep. Congo', 132),
        Model('Congo', 226),
        Model('Colombia', 548),
        Model('Costa Rica', 390),
        Model('Cuba', 21),
        Model('N. Cyprus', 9),
        Model('Cyprus', 63),
        Model('Czech Rep.', 307),
        Model('Germany', 277),
        Model('Djibouti', 314),
        Model('Denmark', 80),
        Model('Dominican Rep.', 420),
        Model('Algeria', 89),
        Model('Ecuador', 54),
        Model('Egypt', 554),
        Model('Eritrea', 562),
        Model('Spain', 168),
        Model('Estonia', 309),
        Model('Ethiopia', 323),
        Model('Finland', 417),
        Model('Fiji', 564),
        Model('Falkland Is.', 4),
        Model('France', 242),
        Model('Gabon', 536),
        Model('United Kingdom', 553),
        Model('Georgia', 374),
        Model('Ghana', 471),
        Model('Guinea', 144),
        Model('Gambia', 498),
        Model('Guinea-Bissau', 454),
        Model('Eq. Guinea', 314),
        Model('Greece', 324),
        Model('Greenland', 566),
        Model('Guatemala', 310),
        Model('Guyana', 154),
        Model('Honduras', 46),
        Model('Croatia', 331),
        Model('Haiti', 191),
        Model('Hungary', 315),
        Model('Indonesia', 171),
        Model('India', 543),
        Model('Ireland', 256),
        Model('Iran', 154),
        Model('Iraq', 50),
        Model('Iceland', 554),
        Model('Israel', 441),
        Model('Italy', 401),
        Model('Jamaica', 59),
        Model('Jordan', 182),
        Model('Japan', 89),
        Model('Kazakhstan', 457),
        Model('Kenya', 519),
        Model('Kyrgyzstan', 255),
        Model('Cambodia', 151),
        Model('Korea', 600),
        Model('Kosovo', 388),
        Model('Kuwait', 468),
        Model('Lao PDR', 470),
        Model('Lebanon', 54),
        Model('Liberia', 455),
        Model('Libya', 492),
        Model('Sri Lanka', 393),
        Model('Lesotho', 474),
        Model('Lithuania', 431),
        Model('Luxembourg', 521),
        Model('Latvia', 101),
        Model('Morocco', 226),
        Model('Moldova', 173),
        Model('Madagascar', 357),
        Model('Mexico', 458),
        Model('Macedonia', 476),
        Model('Mali', 215),
        Model('Myanmar', 337),
        Model('Montenegro', 543),
        Model('Mongolia', 497),
        Model('Mozambique', 533),
        Model('Mauritania', 584),
        Model('Malawi', 547),
        Model('Malaysia', 274),
        Model('Namibia', 568),
        Model('New Caledonia', 589),
        Model('Niger', 85),
        Model('Nigeria', 139),
        Model('Nicaragua', 217),
        Model('Netherlands', 337),
        Model('Norway', 59),
        Model('Nepal', 421),
        Model('New Zealand', 573),
        Model('Oman', 331),
        Model('Pakistan', 252),
        Model('Panama', 354),
        Model('Peru', 550),
        Model('Philippines', 419),
        Model('Papua New Guinea', 480),
        Model('Poland', 557),
        Model('Puerto Rico', 161),
        Model('Dem. Rep. Korea', 478),
        Model('Portugal', 371),
        Model('Paraguay', 29),
        Model('Palestine', 100),
        Model('Qatar', 412),
        Model('Romania', 354),
        Model('Russia', 579),
        Model('Rwanda', 547),
        Model('W. Sahara', 245),
        Model('Saudi Arabia', 42),
        Model('Sudan', 17),
        Model('S. Sudan', 245),
        Model('Senegal', 540),
        Model('Solomon Is.', 264),
        Model('Sierra Leone', 244),
        Model('El Salvador', 577),
        Model('Somaliland', 306),
        Model('Somalia', 286),
        Model('Serbia', 46),
        Model('Suriname', 351),
        Model('Slovakia', 479),
        Model('Slovenia', 382),
        Model('Sweden', 495),
        Model('Swaziland', 142),
        Model('Syria', 23),
        Model('Chad', 369),
        Model('Togo', 278),
        Model('Thailand', 599),
        Model('Tajikistan', 555),
        Model('Turkmenistan', 488),
        Model('Timor-Leste', 184),
        Model('Trinidad and Tobago', 64),
        Model('Tunisia', 344),
        Model('Turkey', 430),
        Model('Taiwan', 447),
        Model('Tanzania', 397),
        Model('Uganda', 212),
        Model('Ukraine', 449),
        Model('Uruguay', 328),
        Model('United States of America', 491),
        Model('Uzbekistan', 147),
        Model('Venezuela', 561),
        Model('Vietnam', 454),
        Model('Vanuatu', 362),
        Model('Yemen', 545),
        Model('South Africa', 473),
        Model('Zambia', 68),
        Model('Zimbabwe', 429)
      ];

  static MapShapeSource get mapSource =>
      MapShapeSource.asset('assets/world_map.json',
          shapeDataField: 'name',
          dataCount: mapData.length,
          primaryValueMapper: (int index) => mapData[index].country,
          shapeColorValueMapper: (int index) => mapData[index].density,
          shapeColorMappers: [
            const MapColorMapper(
              from: -1,
              to: 100,
              color: affected1,
            ),
            const MapColorMapper(
              from: 101,
              to: 200,
              color: affected2,
            ),
            const MapColorMapper(
              from: 201,
              to: 300,
              color: affected3,
            ),
            const MapColorMapper(
              from: 301,
              to: 400,
              color: affected4,
            ),
            const MapColorMapper(
              from: 401,
              to: 500,
              color: affected5,
            ),
            const MapColorMapper(
              from: 501,
              to: 600,
              color: affected6,
            ),
          ],
      );

  static MapZoomPanBehavior get zoomPanBehavior => MapZoomPanBehavior(
        focalLatLng: const MapLatLng(27.1751, 78.0421),
        zoomLevel: 1.8,
        toolbarSettings: const MapToolbarSettings(
          iconColor: Colors.red,
          itemBackgroundColor: Colors.green,
          itemHoverColor: Colors.blue,
        ),
      );

  static List<TopCountryCard> get topCountryList =>
      <TopCountryCard>[
        const TopCountryCard(
          countryTitle: "China",
          affectedValue: "81.05k",
          recoveredValue: "72.44k",
          countryProgress: 0.26,
          countryProgressColor: primary,
        ),
        const TopCountryCard(
          countryTitle: "Italy",
          affectedValue: "53.5k",
          recoveredValue: "6.07k",
          countryProgress: 0.17,
          countryProgressColor: green,
        ),
        const TopCountryCard(
          countryTitle: "USA",
          affectedValue: "26.892",
          recoveredValue: "178",
          countryProgress: 0.09,
          countryProgressColor: blue,
        ),
      ];
  static List<RestCountryCard> get restCountryList =>
      <RestCountryCard>[
        const RestCountryCard(
          countryTitle: "China",
          affectedValue: "81.05k",
          recoveredValue: "72.44k",
          countryProgress: 0.26,
          countryProgressColor: primary,
          image: "fr",
        ),
        const RestCountryCard(
          countryTitle: "Italy",
          affectedValue: "53.5k",
          recoveredValue: "6.07k",
          countryProgress: 0.17,
          countryProgressColor: green,
          image: "kr",
        ),
        const RestCountryCard(
          countryTitle: "USA",
          affectedValue: "26.892",
          recoveredValue: "178",
          countryProgress: 0.09,
          countryProgressColor: blue,
          image: "sk",
        ),
        const RestCountryCard(
          countryTitle: "USA",
          affectedValue: "26.892",
          recoveredValue: "178",
          countryProgress: 0.09,
          countryProgressColor: blue,
          image: "cl",
        ),
        const RestCountryCard(
          countryTitle: "USA",
          affectedValue: "26.892",
          recoveredValue: "178",
          countryProgress: 0.09,
          countryProgressColor: blue,
          image: "nl",
        ),
        const RestCountryCard(
          countryTitle: "USA",
          affectedValue: "26.892",
          recoveredValue: "178",
          countryProgress: 0.09,
          countryProgressColor: blue,
          image: "be",
        ),
        const RestCountryCard(
          countryTitle: "USA",
          affectedValue: "26.892",
          recoveredValue: "178",
          countryProgress: 0.09,
          countryProgressColor: blue,
          image: "at",
        ),
        const RestCountryCard(
          countryTitle: "USA",
          affectedValue: "26.892",
          recoveredValue: "178",
          countryProgress: 0.09,
          countryProgressColor: blue,
          image: "no",
        ),
        const RestCountryCard(
          countryTitle: "USA",
          affectedValue: "26.892",
          recoveredValue: "178",
          countryProgress: 0.09,
          countryProgressColor: blue,
          image: "no",
        ),
        const RestCountryCard(
          countryTitle: "USA",
          affectedValue: "26.892",
          recoveredValue: "178",
          countryProgress: 0.09,
          countryProgressColor: blue,
          image: "by",
        ),
      ];
}
